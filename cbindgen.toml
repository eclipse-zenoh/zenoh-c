#
# Copyright (c) 2022 ZettaScale Technology
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ZettaScale Zenoh Team, <zenoh@zettascale.tech>
#

# This is a template cbindgen.toml file with all of the default values.
# Some values are commented out because their absence is the real default.
#
# See https://github.com/eqrion/cbindgen/blob/master/docs.md#cbindgentoml
# for detailed documentation of every option here.


language = "C"


############## Options for Wrapping the Contents of the Header #################

# header = "/* Text to put at the beginning of the generated file. Probably a license. */"
# trailer = "/* Text to put at the end of the generated file */"
# include_guard = "ZENOH_FUNCTIONS"
# pragma_once = true
# autogen_warning = "/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */"
include_version = false
# namespace = "my_namespace"
namespaces = []
using_namespaces = []
sys_includes = []
includes = []
no_includes = false
after_includes = ""


############################ Code Style Options ################################

braces = "SameLine"
line_length = 100
tab_width = 2
documentation_style = "auto"


############################# Codegen Options ##################################

style = "both"
usize_is_size_t = true


[defines]
"target_arch = aarch64" = "TARGET_ARCH_AARCH64"
"target_arch = x86_64" = "TARGET_ARCH_X86_64"
"target_arch = arm" = "TARGET_ARCH_ARM"
"target_os = windows" = "_WIN32"
"target_os = linux" = "__unix__"
"feature = shared-memory" = "Z_FEATURE_SHARED_MEMORY"
"feature = unstable" = "Z_FEATURE_UNSTABLE_API"

[export]
include = []
exclude = []
# prefix = "CAPI_"
item_types = []
renaming_overrides_prefixing = false


[export.rename]


[export.body]


[fn]
rename_args = "None"
# must_use = "MUST_USE_FUNC"
prefix = "ZENOHC_API"
# postfix = "END_FUNC"
args = "auto"
sort_by = "Name"


[struct]
rename_fields = "None"
# must_use = "MUST_USE_STRUCT"
derive_constructor = false
derive_eq = false
derive_neq = false
derive_lt = false
derive_lte = false
derive_gt = false
derive_gte = false


[enum]
rename_variants = "ScreamingSnakeCase"
# must_use = "MUST_USE_ENUM"
add_sentinel = false
prefix_with_name = true
derive_helper_methods = false
derive_const_casts = false
derive_mut_casts = false
# cast_assert_name = "ASSERT"
derive_tagged_enum_destructor = false
derive_tagged_enum_copy_constructor = false
enum_class = true
private_default_tagged_enum_constructor = false


[const]
allow_static_const = true
allow_constexpr = false


[macro_expansion]
bitflags = false

[layout]
aligned_n = "ALIGN"

############## Options for How Your Rust library Should Be Parsed ##############

[parse]
parse_deps = false
# include = []
exclude = []
clean = false
extra_bindings = []


[parse.expand]
crates = []
all_features = false
default_features = true
features = []
